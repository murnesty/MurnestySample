<Window x:Class="MvvmSample.View.SampleView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:MvvmSample.View"
        xmlns:control="clr-namespace:MvvmSample.Control"
        xmlns:model="clr-namespace:MvvmSample.Model"
        mc:Ignorable="d"
        WindowStartupLocation="CenterScreen"
        Title="SampleView" Height="450" Width="800"
        DataContext="{Binding Path=SampleViewModel, Source={StaticResource SampleLocator}}"
        >
    <TabControl>
        <TabItem Header="Binding event">
            <StackPanel Tag="StackPanel 1">
                <!-- Binding property and event -->
                <TextBlock Text="{Binding Text1}" Background="{Binding Text1Brush}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseEnter">
                            <i:InvokeCommandAction Command="{Binding MouseEnterTextBlockCommand}"/>
                        </i:EventTrigger>
                        <i:EventTrigger EventName="MouseLeave">
                            <i:InvokeCommandAction Command="{Binding MouseLeaveTextBlockCommand}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </TextBlock>
                <Button Content="Testing" Command="{Binding ButtonEnterCommand}" 
                        CommandParameter="{Binding Path=Tag,RelativeSource={RelativeSource Mode=FindAncestor,AncestorLevel=1,AncestorType=StackPanel},FallbackValue=BindingFailed}" />
                <WrapPanel Height="150" Width="150">
                    <!-- generic and custum control -->
                    <control:ColorButton Width="50" Height="50" Content="Red"></control:ColorButton>
                    <control:ColorButton Width="50" Height="50" Content="Blue"></control:ColorButton>
                    <control:ColorButton Width="50" Height="50" Content="Green"></control:ColorButton>
                    <control:ColorButton Width="50" Height="50" Content="Pink"></control:ColorButton>
                    <control:ColorButton Width="50" Height="50" Content="Orange"></control:ColorButton>
                    <control:ColorButton Width="50" Height="50" Content="Yellow"></control:ColorButton>
                    <control:ColorButton Width="50" Height="50" Content="Gray"></control:ColorButton>
                    <control:ColorButton Width="50" Height="50" Content="Purple"></control:ColorButton>
                    <control:ColorButton Width="50" Height="50" Content="Black"></control:ColorButton>
                </WrapPanel>
            </StackPanel>
        </TabItem>
        <TabItem Header="DataGrid">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="50"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <!-- Validation.ErrorTemplate   : to remove the red border when user select empty row (eg, last roll) -->
                <!-- SelectionMode              : to select multiple entries -->
                <DataGrid Grid.Row="0"  Grid.Column="0"
                          ItemsSource="{Binding NameView, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" 
                          AutoGenerateColumns="False" 
                          Validation.ErrorTemplate="{x:Null}" 
                          SelectionMode="Extended" 
                          SelectedItem="{Binding SelectedNameEntry}">
                    <DataGrid.Columns>
                        <!-- Binding to (model:NameSelectionEntry.IsSelected) will cause hybridcollection having null key -->
                        <DataGridCheckBoxColumn Binding="{Binding IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                                ElementStyle="{DynamicResource BookmarkCheckbox}"
                                                CellStyle="{DynamicResource BookmarkCell}"></DataGridCheckBoxColumn>
                        <DataGridTextColumn Binding="{Binding ID, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"></DataGridTextColumn>
                        <DataGridTextColumn Binding="{Binding Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"></DataGridTextColumn>
                    </DataGrid.Columns>
                </DataGrid>
                <StackPanel Grid.Row="0" Grid.Column="1">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock>Selected :</TextBlock>
                        <TextBox Text="{Binding SelectedSelected}"></TextBox>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock>ID : </TextBlock>
                        <TextBox Text="{Binding SelectedId}"></TextBox>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock>Name :</TextBlock>
                        <TextBox Text="{Binding SelectedName}"></TextBox>
                    </StackPanel>
                </StackPanel>
                <Button Grid.Row="1" Content="Read" Command="{Binding ReadNameCommand}"/>
            </Grid>
        </TabItem>
        <TabItem Header="Controls">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <control:LabelTextbox Grid.Row="0" Label="ID: " Value="{Binding NameEntry.ID}"/>
                <control:LabelTextbox Grid.Row="1" Label="Name: " Value="{Binding NameEntry.Name}"/>
                <control:LabelTextbox Grid.Row="2" Label="Is Selected: " Value="{Binding NameEntry.IsSelected}"/>
                <Button Grid.Row="3" Content="Load" Command="{Binding LoadNameEntryCommand}"></Button>
            </Grid>
        </TabItem>
        <TabItem Header="Image">
            <Grid  Background="LightGray">
                <Image Source="{Binding ImageSrc}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="5"/>
            </Grid>
        </TabItem>
        <TabItem Header="ImageList">
            <Grid  Background="LightGray">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="25"/>
                </Grid.RowDefinitions>
                <Image Grid.Row="0" Source="{Binding ImageSrc}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="5"/>
                <StackPanel Grid.Row="1" Orientation="Horizontal" HorizontalAlignment="Center">
                    <Button Content="1" Command="{Binding ImgCommand}" CommandParameter="0" Margin="3"/>
                    <Button Content="2" Command="{Binding ImgCommand}" CommandParameter="1" Margin="3"/>
                    <Button Content="3" Command="{Binding ImgCommand}" CommandParameter="2" Margin="3"/>
                    <Button Content="4" Command="{Binding ImgCommand}" CommandParameter="3" Margin="3"/>
                </StackPanel>
            </Grid>
        </TabItem>
    </TabControl>
</Window>
