<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
    xmlns:control="clr-namespace:MvvmSample.Control">

    <!-- <Grid Tag="AncestorLevel 3"> -->
    <!--     <Grid Tag="AncestorLevel 2"> -->
    <!--         <Grid Tag="AncestorLevel 1"> -->
    <!--             <StackPanel Tag="StackPanel Tag" Height="100" HorizontalAlignment="Left" Margin="156,97,0,0" Name="stackPanel1" VerticalAlignment="Top" Width="200"> -->
    <!--                 <Label Content="{Binding Path=Tag,RelativeSource={RelativeSource Mode=FindAncestor,AncestorLevel=1,AncestorType=Grid},FallbackValue=BindingFailed}" Height="28"  /> -->
    <!--                 <Label Content="{Binding Path=Tag,RelativeSource={RelativeSource Mode=FindAncestor,AncestorLevel=2,AncestorType=Grid},FallbackValue=BindingFailed}" Height="28"  /> -->
    <!--                 <Label Content="{Binding Path=Tag,RelativeSource={RelativeSource Mode=FindAncestor,AncestorLevel=3,AncestorType=Grid},FallbackValue=BindingFailed}" Height="28"  /> -->
    <!--             </StackPanel> -->
    <!--         </Grid> -->
    <!--     </Grid> -->
    <!-- </Grid> -->
    <!-- Results : -->
    <!-- AncestorLevel 1 -->
    <!-- AncestorLevel 2 -->
    <!-- AncestorLevel 3 -->
    <Style TargetType="{x:Type control:ColorButton}"
           BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Tag" Value="Button_ColorButton" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type control:ColorButton}">
                    <Border Tag="Button_Border"
                            BorderBrush="Aquamarine"
                            BorderThickness="1"
                            Background="LightSkyBlue" >
                        <ContentPresenter x:Name="ButtonContentPresenter"
                                          VerticalAlignment="Center"  
                                          HorizontalAlignment="Center">
                            <ContentPresenter.Resources>
                                <Style TargetType="TextBlock">
                                    <Setter Property="TextAlignment" Value="Center" />
                                </Style>
                            </ContentPresenter.Resources>
                        </ContentPresenter>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseEnter">
                                <i:InvokeCommandAction Command="{Binding ButtonEnterCommand}"  CommandParameter="{Binding Path=Content,RelativeSource={RelativeSource Mode=FindAncestor,AncestorLevel=1,AncestorType=control:ColorButton},FallbackValue=BindingFailed}"/>
                            </i:EventTrigger>
                            <i:EventTrigger EventName="MouseLeave">
                                <i:InvokeCommandAction Command="{Binding ButtonLeaveCommand}" CommandParameter="{Binding Path=Content,RelativeSource={RelativeSource Mode=FindAncestor,AncestorLevel=1,AncestorType=control:ColorButton},FallbackValue=BindingFailed}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type control:IconCheckBox}"
           BasedOn="{StaticResource {x:Type CheckBox}}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid>
                        <Border x:Name="border">
                            <Border Background="Transparent"/>
                        </Border>
                        <Ellipse x:Name="outerEllipse" Height="16" Width="16" VerticalAlignment="Top" Margin="0,3,0,0">
                            <Ellipse.Fill>
                                <RadialGradientBrush>
                                    <GradientStop Offset="0" Color="Transparent"/>
                                    <GradientStop Offset="0.88" Color="Transparent"/>
                                    <GradientStop Offset="1" Color="Transparent"/>
                                </RadialGradientBrush>
                            </Ellipse.Fill>
                        </Ellipse>
                        <Image x:Name="highlightCircle" Source="/MvvmSample;component/Resource/Custom-Icon-Design-Mini-Star-full.ico" Height="12" Width="12" Margin="0,5,0,0"  VerticalAlignment="Top"/>
                        <ContentPresenter x:Name="content" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="highlightCircle" Property="Opacity" Value="1"/>
                            <Setter TargetName="outerEllipse" Property="Fill">
                                <Setter.Value>
                                    <RadialGradientBrush>
                                        <GradientStop Offset="0" Color="GreenYellow"/>
                                        <GradientStop Offset="0.88" Color="GreenYellow"/>
                                        <GradientStop Offset="1" Color="GreenYellow"/>
                                    </RadialGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="highlightCircle" Property="Opacity" Value="0"/>
                            <Setter TargetName="outerEllipse" Property="Fill">
                                <Setter.Value>
                                    <RadialGradientBrush>
                                        <GradientStop Offset="0" Color="Transparent"/>
                                        <GradientStop Offset="0.88" Color="Transparent"/>
                                        <GradientStop Offset="1" Color="Transparent"/>
                                    </RadialGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- Bookmark checkbox -->
    <Style x:Key="BookmarkCheckbox" TargetType="CheckBox">
        <Setter Property="Cursor" Value="Hand"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid>
                        <Border x:Name="border">
                            <Border Background="Transparent"/>
                        </Border>
                        <Ellipse x:Name="outerEllipse" Height="16" Width="16" VerticalAlignment="Top" Margin="0,3,0,0">
                            <Ellipse.Fill>
                                <RadialGradientBrush>
                                    <GradientStop Offset="0" Color="Transparent"/>
                                    <GradientStop Offset="0.88" Color="Transparent"/>
                                    <GradientStop Offset="1" Color="Transparent"/>
                                </RadialGradientBrush>
                            </Ellipse.Fill>
                        </Ellipse>
                        <Image x:Name="highlightCircle" Source="/MvvmSample;component/Resource/Custom-Icon-Design-Mini-Star-full.ico" Height="12" Width="12" Margin="0,5,0,0"  VerticalAlignment="Top"/>
                        <ContentPresenter x:Name="content" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="highlightCircle" Property="Opacity" Value="1"/>
                            <Setter TargetName="outerEllipse" Property="Fill">
                                <Setter.Value>
                                    <RadialGradientBrush>
                                        <GradientStop Offset="0" Color="GreenYellow"/>
                                        <GradientStop Offset="0.88" Color="GreenYellow"/>
                                        <GradientStop Offset="1" Color="GreenYellow"/>
                                    </RadialGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="highlightCircle" Property="Opacity" Value="0"/>
                            <Setter TargetName="outerEllipse" Property="Fill">
                                <Setter.Value>
                                    <RadialGradientBrush>
                                        <GradientStop Offset="0" Color="Transparent"/>
                                        <GradientStop Offset="0.88" Color="Transparent"/>
                                        <GradientStop Offset="1" Color="Transparent"/>
                                    </RadialGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="BookmarkCell" TargetType="DataGridCell" BasedOn="{StaticResource {x:Type DataGridCell}}">
        <Setter Property="Background" Value="Transparent"/>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="Transparent"/>
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="Transparent"/>
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>
